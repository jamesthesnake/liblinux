# Accesses the value associated with the given name.
# Useful for functional composition.
#
# Arguments:
#   $(1) = name of the variable to dereference
#
# Variables:
#   $($(1)) = the value that will be accessed
#
# Returns:
#   the valuable of the variable
#
dereference = $($(1))
* = $(call dereference,$(1))

# Resolves a composite variable name.
#
# Arguments:
#   $(1) = list of variable name components in order
#   $(2) = separator
#
# Defaults:
#   $(2) = .
#
# Returns:
#   the name of the variable
#
resolve.name = $(subst $(space),$(or $(2),.),$(strip $(1)))

# Resolves a composite variable name and retrieves its value.
#
# Arguments:
#   $(1) = list of variable name components in order
#   $(2) = separator
#
# Defaults:
#   $(2) = .
#
# Returns:
#   the value bound to the variable
#
resolve.value = $($(call resolve.name,$(1),$(2)))

# Tests whether the given variable is undefined.
#
# Arguments:
#   $(1) = name of the variable
#
# Returns:
#   whether the $(1) variable is undefined
#
undefined? = $(call boolean,$(call equal?,undefined,$(flavor $(1))))

# Tests whether the given variable is defined.
#
# Arguments:
#   $(1) = name of the variable
#
# Returns:
#   whether the $(1) variable is defined
#
defined? = $(call not,$(call undefined?,$(1)))
